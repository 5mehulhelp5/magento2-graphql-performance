name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: dom, curl, libxml, mbstring, zip, pdo, mysql, intl, gd, exif, iconv
          coverage: none
          tools: composer:v2, cs2pr

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Configure Composer auth
        run: |
          composer config http-basic.repo.magento.com ${{ secrets.MAGENTO_MARKETPLACE_PUBLIC_KEY }} ${{ secrets.MAGENTO_MARKETPLACE_PRIVATE_KEY }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: PHPCS check
        run: vendor/bin/phpcs --standard=Magento2 --report=checkstyle -q . | cs2pr

  tests:
    name: PHPUnit Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: magento_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: dom, curl, libxml, mbstring, zip, pdo, mysql, intl, gd, exif, iconv
          coverage: xdebug
          tools: composer:v2

      - name: Configure Composer auth
        run: |
          composer config http-basic.repo.magento.com ${{ secrets.MAGENTO_MARKETPLACE_PUBLIC_KEY }} ${{ secrets.MAGENTO_MARKETPLACE_PRIVATE_KEY }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run unit tests
        run: vendor/bin/phpunit -c Test/Unit/phpunit.xml.dist --coverage-clover=coverage.xml

      - name: Run integration tests
        run: vendor/bin/phpunit -c Test/Integration/phpunit.xml.dist

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [quality, tests]
    if: github.event_name == 'release'

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: dom, curl, libxml, mbstring, zip, pdo, mysql, intl, gd, exif, iconv
          coverage: none
          tools: composer:v2

      - name: Configure Composer auth
        run: |
          composer config http-basic.repo.magento.com ${{ secrets.MAGENTO_MARKETPLACE_PUBLIC_KEY }} ${{ secrets.MAGENTO_MARKETPLACE_PRIVATE_KEY }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-dev

      - name: Create release artifact
        run: |
          zip -r Sterk_GraphQlPerformance_${{ github.event.release.tag_name }}.zip . \
            -x ".git/*" ".github/*" "Test/*" "docs/*" ".gitignore" "phpunit.xml.dist" "phpstan.neon" "psalm.xml"

      - name: Upload release artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./Sterk_GraphQlPerformance_${{ github.event.release.tag_name }}.zip
          asset_name: Sterk_GraphQlPerformance_${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip
