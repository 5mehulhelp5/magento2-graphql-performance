name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.1']
        magento-version: ['2.4.4', '2.4.5', '2.4.6']

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: json, gd, mysql, zip, intl, pdo_mysql
          coverage: none
          tools: composer
          ini-values: memory_limit=2G

      - name: Verify Secrets
        if: ${{ secrets.MAGENTO_MARKETPLACE_PUBLIC_KEY == '' || secrets.MAGENTO_MARKETPLACE_PRIVATE_KEY == '' }}
        run: |
          echo "::error::Missing required secrets!"
          echo "Please add the following secrets in your repository settings:"
          echo "- MAGENTO_MARKETPLACE_PUBLIC_KEY"
          echo "- MAGENTO_MARKETPLACE_PRIVATE_KEY"
          echo "Get these from https://marketplace.magento.com/customer/accessKeys/"
          exit 1

      - name: Test Magento Authentication
        env:
          PUBLIC_KEY: ${{ secrets.MAGENTO_MARKETPLACE_PUBLIC_KEY }}
          PRIVATE_KEY: ${{ secrets.MAGENTO_MARKETPLACE_PRIVATE_KEY }}
        run: |
          # Debug key info (safely)
          if [ -z "$PUBLIC_KEY" ] || [ -z "$PRIVATE_KEY" ]; then
            echo "::error::One or both keys are empty!"
            exit 1
          fi
          echo "Keys are present and not empty"

          # Create test auth.json
          echo "{
            \"http-basic\": {
              \"repo.magento.com\": {
                \"username\": \"${PUBLIC_KEY}\",
                \"password\": \"${PRIVATE_KEY}\"
              }
            }
          }" > test-auth.json

          # Show auth.json (masked)
          echo "Auth file contents (masked):"
          sed 's/"username": "[^"]*"/"username": "****"/g; s/"password": "[^"]*"/"password": "****"/g' test-auth.json

          # Test with curl
          echo "Testing Magento authentication..."
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" --netrc-file test-auth.json https://repo.magento.com/packages.json)

          # If that fails, try getting more info
          if [ "$HTTP_CODE" != "200" ]; then
            echo "Detailed response:"
            curl -v --netrc-file test-auth.json https://repo.magento.com/packages.json
          fi
          echo "HTTP response code: $HTTP_CODE"

          if [ "$HTTP_CODE" = "200" ]; then
            echo "Authentication successful!"
          else
            echo "Authentication failed with code $HTTP_CODE"
            echo "Please verify your Magento Marketplace keys in GitHub Secrets:"
            echo "1. Go to your repository settings"
            echo "2. Click on Secrets and variables > Actions"
            echo "3. Check MAGENTO_MARKETPLACE_PUBLIC_KEY and MAGENTO_MARKETPLACE_PRIVATE_KEY"
            echo "4. Make sure they match your keys from https://marketplace.magento.com/customer/accessKeys/"
            exit 1
          fi

      - name: Install Dependencies
        run: |
          # Create auth.json with environment variables
          echo "{
            \"http-basic\": {
              \"repo.magento.com\": {
                \"username\": \"${{ secrets.MAGENTO_MARKETPLACE_PUBLIC_KEY }}\",
                \"password\": \"${{ secrets.MAGENTO_MARKETPLACE_PRIVATE_KEY }}\"
              }
            }
          }" > auth.json

          # Show auth.json was created (without showing contents)
          ls -la auth.json

          # Move auth.json to composer home
          mkdir -p ~/.composer
          cp auth.json ~/.composer/

          # Configure Magento repository
          composer config repositories.magento composer https://repo.magento.com/

          # Install dependencies with verbose output
          COMPOSER_AUTH=$(cat auth.json) composer -vvv install --prefer-dist --no-progress --no-interaction

      - name: Run tests
        run: |
          vendor/bin/phpunit
          vendor/bin/phpcs
          vendor/bin/phpstan analyse
          vendor/bin/psalm
          vendor/bin/phpmd src text cleancode,codesize,controversial,design,naming,unusedcode

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create release archive
        run: |
          zip -r Sterk_GraphQlPerformance.zip app/code/Sterk/GraphQlPerformance

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Sterk_GraphQlPerformance.zip
          asset_name: Sterk_GraphQlPerformance.zip
          asset_content_type: application/zip
